PROGRAM _CYCLIC
	(* cyclic program *)

;--------------------------------
;Sequence 3 - Loading Unit D[903]
;--------------------------------

;Inputs / Ouputs

;I_BagOutLoadingUnit     = X904		
;I_BagSLU1Trip			= X903
;I_BaginLoadingUnit		= X902

EnableRel.TransferBelt[2]	= FALSE
Request.LU[2]                      = FALSE
Request.SP[7]                      = FALSE

I_BagAtBuffer			    = X[3].X03
I_BagFrontPast			  = X[3].X04
I_BagInLoadingUnit		= X[3].X05
I_BagOutCLU1             = X[3].X06

;I_ChuteBlocked			= X[8].X05
;I_CompressorAtTop		= X[5].X13
;I_CompressorAtMid		= X[5].X15
;I_CompressorAtBot		= X[5].X14

O_MoveCompressorUp		= FALSE
O_MoveCompressorDn		= FALSE

I_BagAtSVC1Buffer		= FALSE ;X[12].X11
O_SVC1BufferOpen		= FALSE ;Y[12].Y11

O_OpenBufferStop		= FALSE
O_SteadyCylinders		= FALSE
O_OpenStop	 			= FALSE


RequestRel.LU[2]		= FALSE;
Alarm[3].Name 			= 0
Alarm[3].Bag			= 160
Alarm[3].Beacon			= FALSE
Alarm[3].Extra			= 0
Alarm[3].Time			= 3000

;Setup Sequence
;--------------
STEP = D[903]
;Setup Pulse contact
PLS = (STEP <> LASTSTEP)
LASTSTEP = STEP

IF (STEP = 0) THEN
	;Disabled
ENDIF

;Wait for Empty bag at buffer
SwitchFault = ((STEP = 1) AND (I_BagFrontPast OR I_BagInLoadingUnit))
TON_10ms(NOT SwitchFault,200,LoadingUnitClear,LoadingUnitClearET)
TON_10ms(I_BagAtBuffer,300,BagSettledBuffer,BagSettledBufferET)
IF (STEP = 1) THEN
	IF  BagSettledBuffer AND LoadingUnitClear AND NOT Std.HaltSys THEN
		D[903] = 2
	ENDIF
	IF SwitchFault THEN
		Alarm[3].Name = almSwitchFault
	ELSE
		Alarm[3].Name = almNoAlarm
	ENDIF
ENDIF

IF ((STEP = 2) OR (STEP = 3)) THEN
	Request.SP[7] = TRUE
ENDIF

;Open stops let bag in Loading Unit
IF (STEP = 2) THEN
	O_OpenStop 			= TRUE
	O_OpenBufferStop 	= TRUE
	;Enable.LU[1]		= NOT I_BagFrontPast
	IF I_BagFrontPast THEN
		D[903] = 3
	ENDIF
	Alarm[3].Name = almBagNotArrived
ENDIF

;Wait for bag to settle
TON_10ms(I_BagInLoadingUnit,300,EBagSettled,EBagSettledET)
IF (STEP = 3) THEN
	IF EBagSettled THEN
		D[903] = 4
	ENDIF
	Alarm[3].Name = almBagNotSettled
	;Special for Banbury - SVC1 is also a loading hoist
	;IF SVC1RequestEmpty THEN
	;	Bag[221].Cat 	= 99
	;	D[903] 			= 9
	;ENDIF
ENDIF

;Steady cylinders on from steps 4 - 5
O_SteadyCylinders = ((STEP = 4) OR (STEP = 5))

;Move Steady Cylinders down
TON_10ms((STEP = 4),300,SteadysDown,SteadysDownET)
IF (STEP = 4) THEN
	IF (SteadysDown AND (Bag[160].Cat = 0)) THEN
		D[903] = 5
	ENDIF
	IF (Bag[160].Cat <> 0) THEN
		Alarm[3].Name = almBagDataError
	ELSE
		Alarm[3].Name = almNoAlarm
	ENDIF
ENDIF


;Wait for bag to be loaded
IF (STEP = 5) THEN
;	IF RequestRel.TransferBelt[2] THEN
		EnableRel.TransferBelt[2] = TRUE
;	ENDIF
	IF (Bag[160].Cat > 0) THEN
		D[903] = 6
	ENDIF
	Alarm[3].Name = almNoAlarm ;Transfer belt should alarm
ENDIF

;Allow Steady Cylinders to move up
TON_10ms((STEP = 6),300,SteadysUp,SteadysUpET)
IF (STEP = 6) THEN
	IF SteadysUp AND NOT Enable.LU[2] THEN
			D[903] = 7
	ENDIF
	Alarm[3].Name = almNoAlarm
ENDIF






;Check for space at Buffer
TON_10ms((STEP = 7),300,SteadysUp,SteadysUpET)
IF (STEP = 7) THEN
	IF NOT Std.HaltSys AND SteadysUp AND (Bag[221].Cat = 0) THEN
		Request.LU[2] = TRUE
		IF Enable.LU[2] THEN
			IF (Bag[160].Cat>0) AND (Bag[164].Cat = 0) THEN
							Bag[164] = Bag[160]
							Bag[160] = Bag[0]
			ENDIF
		;	C[34]   = 0
			D[903] 	= 8
			;ELSE
			;Alarm[3].Name = almSwitchFault	
		ENDIF
		;ENDIF
	ENDIF
ENDIF

;Open stop - Unitl bag out
IF (STEP = 8) THEN
	O_OpenStop = TRUE
	;IF PLS THEN
	;	C[16] = 0
	;ENDIF
	;IF Line[16].Trip THEN
	IF I_BagOutCLU1  THEN
		
		D[903] = 1
	ENDIF
	Alarm[3].Name = almBagNotReleased
ENDIF

;Alarms
TimerAlarm.IN = NOT PLS AND (Alarm[3].Name > 0)
TimerAlarm.PT = Alarm[3].Time
TimerAlarm FUB TON_10ms()
Alarm[3].On = TimerAlarm.Q
Alarm[3].ET = TimerAlarm.ET

;Outputs
;-------

Y[3].Y02 = O_OpenBufferStop
Y[3].Y04 = O_SteadyCylinders
Y[3].Y05 = O_OpenStop

;Y[8].Y10 = O_MoveDownTop
;Y[8].Y09 = O_MoveDownBottom
;Y[8].Y15 = O_ElephantsFoot
END_PROGRAM

