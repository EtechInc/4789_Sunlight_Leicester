PROGRAM _CYCLIC
  	(* cyclic program *)

;-----------------------------------------
;Sequence 15 - Offgoing Bag Stacker D[915]
;-----------------------------------------

;Inputs
I_RockSepA				= X[7].X07
I_RockSepB				= X[7].X08
I_TiltA					= X[7].X09
I_TiltB					= X[7].X10
I_OutLineA				= X[7].X11
I_OutLineB				= X[7].X12

O_OpenRockSep			= FALSE
O_LevelCylinder			= FALSE
O_OpenLineAStop			= FALSE
O_OpenLineBStop			= FALSE
O_SelectLineA			= FALSE
O_SelectLineB			= FALSE

Alarm[14].Name 			= 0
Alarm[14].Bag			= 10002
Alarm[14].Beacon		= FALSE
Alarm[14].Extra			= 0
Alarm[14].Time			= 3000

;Setup Sequecne
STEP = D[914]
;Setup Pulse contact
PLS = (STEP <> LASTSTEP)
LASTSTEP = STEP



;Sequence

;Select Line 'A'
TON_10ms((NOT I_TiltA AND NOT I_TiltB),100,LevelClear,LevelClearET)
IF (STEP = 1) THEN
	IF LevelClear AND NOT Std.HaltSys THEN
		D[914] = 2
	ENDIF
	IF NOT Std.HaltSys THEN
		Alarm[14].Name = almSwitchFault
	ENDIF
ENDIF

;Open seperators wait for leveller to be ready
TON_10ms(((STEP = 2) AND I_RockSepA AND I_RockSepB),200,SettledInSeps,SettledInSepsET)
IF (STEP = 2) THEN
	O_OpenRockSep = TRUE
	IF SettledInSeps THEN
		D[914] = 3
	ENDIF
	;Alarm[15].Name = almBagNotArrived
ENDIF

;Wait for bag to settle in leveller position
TON_10ms((I_TiltA AND I_TiltB),300,SettledLevel,SettledLevelET)
IF (STEP = 3) THEN
	IF SettledLevel THEN
		D[914] = 4
	ENDIF
	Alarm[14].Name = almBagNotSettled
ENDIF

;Move bag leveller down
TON_10ms((STEP = 4),500,LevellerDown,LevellerDownET)
IF (STEP = 4) THEN
	O_LevelCylinder = TRUE
	IF LevellerDown THEN
		D[914] = 5
	ENDIF
ENDIF

;Allow bag leveller to retract
TON_10ms((STEP = 5),500,LevellerUp,LevellerUpET)
IF (STEP = 5) THEN
	O_LevelCylinderUP = TRUE
	IF LevellerUp THEN
		D[914] = 6
	ENDIF
ENDIF

;Check room in Buffer
EmptyBufferStopClear = NOT X[8].X08 AND NOT Y[8].Y08
IF (STEP = 6) THEN
	IF NOT Std.HaltSys THEN
		IF (Line[35].Clear AND EmptyBufferStopClear) THEN
			C[35]  = 0
			D[914] = 7
		ENDIF
	ENDIF
ENDIF

;Open stop on line 'A'
IF (STEP = 7) THEN
	O_OpenLineAStop = TRUE
	O_SelectLineA 	= TRUE
	;IF PLS THEN
	;	C[17] = 0
	;ENDIF
	IF I_OutLineA THEN
		D[914] = 8
	ENDIF
	Alarm[14].Name = almBagNotReleased
ENDIF

;Open stop on line 'B'
IF (STEP = 8) THEN
	O_OpenLineBStop = TRUE
	O_SelectLineA 	= TRUE
	IF I_OutLineB THEN
		D[914] = 9
	ENDIF
	Alarm[14].Name = almBagNotReleased
ENDIF

;Select bag stop and wait for bag out of leveller
IF (STEP = 9) THEN
	O_SelectLineB = TRUE
	IF Line[35].Trip THEN
		D[914] = 1
	ENDIF
	Alarm[14].Name = almBagNotReleased
ENDIF

;Alarms
TimerAlarm.IN 	= NOT PLS AND (Alarm[14].Name > 0)
TimerAlarm.PT 	= Alarm[14].Time
TimerAlarm FUB TON_10ms()
Alarm[14].On 	= TimerAlarm.Q
Alarm[14].ET 	= TimerAlarm.ET

;Outputs
Y[7].Y08 = O_OpenRockSep
Y[7].Y11 = O_LevelCylinder
Y[7].Y09 = O_OpenLineAStop
Y[7].Y10 = O_OpenLineBStop
Y[7].Y12 = O_SelectLineA
Y[7].Y13 = O_SelectLineB

;SPR1 Offgoing Bagstacker Pressure relief
TON_10ms((NOT X[10].X07 AND NOT X[10].X08),500,Y[10].Y07,PRLineClearET[0])

;SPR2 Offgoing Bagstacker Pressure relief
TON_10ms((NOT X[10].X09 AND NOT X[10].X10),500,Y[10].Y09,PRLineClearET[1])

;SPR3 Offgoing Bagstacker Pressure relief
TON_10ms((NOT X[10].X11 AND NOT X[10].X12),500,Y[10].Y11,PRLineClearET[2])
;TON_10ms((NOT X[7].X05 AND NOT X[7].X06),500,Y[7].Y07,PRLineClearET[4])
;TON_10ms((NOT X[7].X05 AND X[7].X05),500,Y[7].Y07,PRLineClearET[3])
TON_10ms((NOT X[7].X05 AND NOT X[7].X06),500,Openseparator,OpenseparatorET)

Y[7].Y07 = Openseparator

END_PROGRAM

